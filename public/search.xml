<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo配置NexT主题</title>
    <url>/posts/a3a69e9b/</url>
    <content><![CDATA[<h1 id="下载Next"><a href="#下载Next" class="headerlink" title="下载Next"></a>下载Next</h1><p>在站点根目录执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>

<h1 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h1><p><code>站点配置文件</code>(\)【_config.yml】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next	# 修改theme的值</span><br></pre></td></tr></table></figure>

<h1 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h1><p><code>主题配置文件</code>(..\themes\next)【_config.yml】,根据自己的喜好</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse #  默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span><br><span class="line">#scheme: Mist # Muse 的紧凑版本，整洁有序的单栏外观</span><br><span class="line">scheme: Pisces # 双栏 Scheme，小家碧玉似的清新</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h1 id="设置-语言"><a href="#设置-语言" class="headerlink" title="设置 语言"></a>设置 语言</h1><p><code>站点配置文件</code>(\)【_config.yml】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure>

<p><code>主题配置文件</code>(..\themes\next)【_config.yml】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure>

<h1 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h1><p><code>主题配置文件</code>(..\themes\next)【_config.yml】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  #about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">键值</th>
<th align="left">设定值</th>
<th align="left">显示文本（简体中文）</th>
</tr>
</thead>
<tbody><tr>
<td align="left">home</td>
<td align="left"><code>home: /</code></td>
<td align="left">主页</td>
</tr>
<tr>
<td align="left">archives</td>
<td align="left"><code>archives: /archives</code></td>
<td align="left">归档页</td>
</tr>
<tr>
<td align="left">categories</td>
<td align="left"><code>categories: /categories</code></td>
<td align="left">分类页</td>
</tr>
<tr>
<td align="left">tags</td>
<td align="left"><code>tags: /tags</code></td>
<td align="left">标签页</td>
</tr>
<tr>
<td align="left">about</td>
<td align="left"><code>about: /about</code></td>
<td align="left">关于页面</td>
</tr>
<tr>
<td align="left">commonweal</td>
<td align="left"><code>commonweal: /404.html</code></td>
<td align="left">公益 404</td>
</tr>
</tbody></table>
<h1 id="设置-头像"><a href="#设置-头像" class="headerlink" title="设置 头像"></a>设置 头像</h1><ol>
<li><p>将自己的头像图源保存至<code>..\themes\next\source\images</code></p>
</li>
<li><p><code>主题配置文件</code>(..\themes\next)【_config.yml】</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /images/avatar.png</span><br><span class="line">  rounded: true</span><br><span class="line">  rotated: true</span><br></pre></td></tr></table></figure>

<h1 id="修改站点信息"><a href="#修改站点信息" class="headerlink" title="修改站点信息"></a>修改站点信息</h1><p><code>站点配置文件</code>(\)【_config.yml】,实际情况补充</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Hexo</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: &#x27;&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: John Doe</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure>

<h1 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h1><p>根目录下的source文件夹下新建_data文件夹，并且新建styles.styl文件</p>
<p>路径如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blog\source\_data\styles.styl</span><br></pre></td></tr></table></figure>

<p><code>主题配置文件</code>(..\themes\next)【_config.yml】中找到：<code>custom_file_path</code> 取消<code>style</code>的注释，意味着启用这个文件。</p>
<p>打开styles.styl复制粘贴如下内容：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background.png</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed; //是否滚动，fixed固定</span><br><span class="line">    <span class="attribute">background-size</span>: cover;      //填充</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="设置背景透明"><a href="#设置背景透明" class="headerlink" title="设置背景透明"></a>设置背景透明</h1><p>打开styles.styl复制粘贴如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//文章背板的颜色rgb</span><br><span class="line">.main-inner &gt; .sub-menu, .main-inner &gt; .post-block, .main-inner &gt; .tabs-comment, .main-inner &gt; .comments, .main-inner &gt; .pagination&#123;</span><br><span class="line">    background: #f5f5f56b;                                  </span><br><span class="line">&#125;</span><br><span class="line">body&#123;               //修改主体字体颜色</span><br><span class="line">  color: #000;     </span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-title-link &#123;    //首页文章标题颜色</span><br><span class="line">    color: #000;               </span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-meta-container &#123;    //标题下的日期颜色</span><br><span class="line">    color: #880000;            </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line">.sidebar &#123;</span><br><span class="line">  opacity: 0.7;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的调色</span><br><span class="line">.header-inner &#123;     </span><br><span class="line">  background: rgba(255,255,255,0.7);</span><br><span class="line">&#125;</span><br><span class="line">//搜索框透明</span><br><span class="line">.popup &#123;        </span><br><span class="line">  opacity: 0.5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.main-inner &#123;</span><br><span class="line">    background-color: rgba(255, 255, 255, 0);  //主体背景透明</span><br><span class="line">    padding: 0px 40px 40px 40px;  //调整组件位置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="边框圆角设置"><a href="#边框圆角设置" class="headerlink" title="边框圆角设置"></a>边框圆角设置</h1><p>在 <code>style.style</code>同级文件夹下新建：<code>variables.styl</code>，并且在主题配置文件中同样取消<code>custom_file_path</code>的<code>variable</code>的注释，代表启用variable</p>
<p>然后打开这个文件，输入以下内容：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 圆角设置</span><br><span class="line">$<span class="attribute">border-radius</span>-inner     = <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">$<span class="attribute">border-radius</span>           = <span class="number">30px</span>;</span><br></pre></td></tr></table></figure>

<h1 id="设置页面宽度"><a href="#设置页面宽度" class="headerlink" title="设置页面宽度"></a>设置页面宽度</h1><p>打开主题文件下：<code>source/css/_varibles/Pisces.styl</code>文件.</p>
<p>然后修改以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$content-desktop-large   = 70em</span><br><span class="line">$content-desktop-largest = 90%</span><br></pre></td></tr></table></figure>

<h1 id="鼠标选中文字的颜色"><a href="#鼠标选中文字的颜色" class="headerlink" title="鼠标选中文字的颜色"></a>鼠标选中文字的颜色</h1><p>文件夹：<code>\themes\next\source\css\_common\scaffolding\base.styl</code></p>
<p>修改背景与选中时的文字颜色即可。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">::selection &#123;</span><br><span class="line">  background:   #FFB5C5 // $selection-bg;</span><br><span class="line">  color:    #000000 // $selection-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2D看板娘"><a href="#2D看板娘" class="headerlink" title="2D看板娘"></a>2D看板娘</h1><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line"></span><br><span class="line">npm install live2d-widget-model-wanko //选择的看板娘是wanko</span><br></pre></td></tr></table></figure>

<p>找到你博客的本地存储的根目录，打开_config.yml文件，添加下面的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Live2D动画</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko	// 选择使用的看板娘</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 240</span><br><span class="line">    height: 480</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure>

<p>看板娘：<a href="https://www.cnblogs.com/Friends-A/p/11054968.html#_10">Hexo添加Live2D看板娘+模型预览 - 友人-A - 博客园 (cnblogs.com)</a></p>
<h1 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h1><ol>
<li><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>站点配置文件</code>(\)【_config.yml】,新增</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Search </span><br><span class="line">search:</span><br><span class="line">  path: ./public/search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>主题配置文件</code>(..\themes\next)【_config.yml】，修改</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  trigger: auto</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>

<p>顺带一提，搜索功能弹窗css样式可以在【\source\_data】目录下的【styles.styl】设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//搜索框透明</span><br><span class="line">.popup &#123;        </span><br><span class="line">  opacity: 1;</span><br><span class="line">  background: #FFFFF0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="统计文章字数"><a href="#统计文章字数" class="headerlink" title="统计文章字数"></a>统计文章字数</h1><p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-word-counter --save</span><br></pre></td></tr></table></figure>

<p><code>站点配置文件</code>(\)【_config.yml】,新增</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p><code>主题配置文件</code>(..\themes\next)【_config.yml】，修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>

<h1 id="右上角添加fork-me-on-github入口"><a href="#右上角添加fork-me-on-github入口" class="headerlink" title="右上角添加fork me on github入口"></a>右上角添加fork me on github入口</h1><p><a href="https://tholman.com/github-corners/">GitHub Corners (tholman.com)</a></p>
<p>选个自己喜欢的图标</p>
<p>然后将刚才复制的代码粘贴到<code>themes/next/layout/_layout.swig</code>文件中<div class="headband"></div>下面一行</p>
<p>记得把代码中的<code>href</code>后面的值替换成你要跳转的地址，比如你的GitHub主页</p>
<h1 id="首页配置为只显示部分摘要（不显示全文）"><a href="#首页配置为只显示部分摘要（不显示全文）" class="headerlink" title="首页配置为只显示部分摘要（不显示全文）"></a>首页配置为只显示部分摘要（不显示全文）</h1><ol>
<li><p><code>主题配置文件</code>(..\themes\next)【_config.yml】，修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="方法一：写概述"><a href="#方法一：写概述" class="headerlink" title="方法一：写概述"></a>方法一：写概述</h3><p>在对应文章对 <code>front-matter</code>（文章文件最上方以 <code>---</code>分割对区域，是用来指定个别文件的配置变量区域）中添加<code>description</code>变量，其中<code>description</code>变量设置的内容就会被显示在首页上门，其余的文案一律不显示。配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo添加分类及标签（在Next主题下）</span><br><span class="line">categories:  Hexo</span><br><span class="line">tags:</span><br><span class="line">- Hexo</span><br><span class="line">description: 自建的博客怎么能没有分类和标签呢，所以我就去查了一下怎么去配置分类和标签。</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>这一种方法是需要自己写概述，所以比较费事，于是就有了第二种方法。</p>
<h3 id="方法二：文章截断显示"><a href="#方法二：文章截断显示" class="headerlink" title="方法二：文章截断显示"></a>方法二：文章截断显示</h3><p>这种方法只需要在对应的文章里，想要展示的文章后添加以下标签就可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>

<p>然后首页就会显示在这个标签以上的所有内容，隐藏文章下面的所有内容。</p>
</li>
</ol>
<h1 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h1><p><code>主题配置文件</code>(..\themes\next)【_config.yml】，修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true</span><br><span class="line">  # Back to top in sidebar.</span><br><span class="line">  sidebar: false</span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure>

<h1 id="修改文章链接"><a href="#修改文章链接" class="headerlink" title="修改文章链接"></a>修改文章链接</h1><p>hexo-next文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>，是按照年、月、日、标题来生成的。<br>比如：<code>https://zxiaoxuan.github.io/2019/08/12/hello-world/</code> 这样，如果文章标题是中文的话，URL链接是也会是中文，</p>
<p><strong>安装插件</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>执行此命令可能会不成功，提示你缺少相应的依赖，比如babel-eslint、mini-css-extract-plugin、webpack-cli…<br>使用npm命令安装即可，比如npm install <a href="mailto:&#x65;&#x73;&#108;&#105;&#x6e;&#x74;&#64;&#52;&#x2e;&#120;">&#x65;&#x73;&#108;&#105;&#x6e;&#x74;&#64;&#52;&#x2e;&#120;</a> babel-eslint@8 –save-dev</p>
</blockquote>
<p>修改根目录站点配置文件<code>config.yml</code>，改为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">	<span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">	<span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure>

<h1 id="创建“分类”、“标签”、“关于”选项"><a href="#创建“分类”、“标签”、“关于”选项" class="headerlink" title="创建“分类”、“标签”、“关于”选项"></a>创建“分类”、“标签”、“关于”选项</h1><p><code>主题配置文件</code>(..\themes\next)【_config.yml】，取消categories、tags、about前的注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>

<h2 id="生成“分类”页"><a href="#生成“分类”页" class="headerlink" title="生成“分类”页"></a>生成“分类”页</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>会生成..\source\categories\index.md文件</p>
<p>根据路径找到index.md文件，在date后面添加如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure>

<p>后续在想要添加分页的文章中添加如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories： </span><br><span class="line">- blog</span><br></pre></td></tr></table></figure>

<h2 id="生成“标签”页"><a href="#生成“标签”页" class="headerlink" title="生成“标签”页"></a>生成“标签”页</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>会生成..\source\tags\index.md文件，同样根据路径在index.md中添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p>后续想要添加标签的文章中添加如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tags： </span><br><span class="line">- 问题</span><br></pre></td></tr></table></figure>

<h2 id="生成“关于”页"><a href="#生成“关于”页" class="headerlink" title="生成“关于”页"></a>生成“关于”页</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new about tags</span><br></pre></td></tr></table></figure>

<p>会生成..\source\about\index.md，找到index.md文件，就可以在该文件中添加自己想要表达的信息了。</p>
<h1 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h1><h2 id="valine评论系统"><a href="#valine评论系统" class="headerlink" title="valine评论系统"></a>valine评论系统</h2><p>Valine 评论系统，不需要登录，无后端，nexT主题最新也已经支持安装。该系统基于LeanCloud系统，无后端，实现简单，且其支持MarkDown语法。</p>
<ol>
<li><p>配置</p>
<p>注册LeanCloud系统；LeanCloud官网：<a href="https://console.leancloud.cn/login">https://console.leancloud.cn/login</a></p>
<p>注册登陆后，访问<code>控制台</code>，<code>创建应用</code>，选择<strong>开发版</strong>，确定创建</p>
<p><img src="/posts/a3a69e9b/image-20230417231953916.png" alt="image-20230417231953916"></p>
<p>创建成功，生成了 <strong>AppID</strong> 和 <strong>AppKey</strong>，在<code>控制台</code>—<code>应用凭证</code> 查看，如下图</p>
<p><img src="/posts/a3a69e9b/image-20230417232043143.png" alt="image-20230417232043143"></p>
</li>
</ol>
<p>​	修改<code>主题配置文件</code>(..\themes\next)【_config.yml】</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># 留言是否需要通知</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># 是否需要验证，验证复杂，建议关闭</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">期望与您的交流！</span> <span class="comment"># 默认留言框的文字</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># 默认头像</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># 默认留言框的头部需要访问者输入的信息</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># 文章阅读统计</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">false</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br></pre></td></tr></table></figure>

<h2 id="Gitment评论系统"><a href="#Gitment评论系统" class="headerlink" title="Gitment评论系统"></a>Gitment评论系统</h2><p>Gitment评论系统是基于 <strong>Github</strong> 开发的，是依靠 <strong>GitHub Issues</strong> 的评论系统，Next 主题最新也已经支持安装。</p>
<p><strong>安装前提</strong>：更新 Next 主题（5.1.2 主题及以上）</p>
<p>2.1 注册 <a href="https://so.csdn.net/so/search?q=OAuth&spm=1001.2101.3001.7020">OAuth</a> application</p>
<ol>
<li><p>在 github 中进行注册，进入 <a href="https://github.com/settings/profile">https://github.com/settings/profile</a></p>
</li>
<li><p>点击左侧 <strong>Developer settings</strong></p>
</li>
<li><p>点击左侧<strong>Oauth Apps</strong></p>
</li>
<li><p>点击 <strong>Register a new application</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	Application name:	#应用名称</span><br><span class="line">	Homepage URL：  		#网站URL(自己的博客主页地址)</span><br><span class="line">	Application description		#描述</span><br><span class="line">	Authorization callback URL:	#网站URL(自己的博客主页地址)</span><br><span class="line"><span class="number">1234</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>注册完成之后，得到：<strong>Client ID</strong> 和 <strong>Client Secret</strong></p>
<p>2.2 新建存放博客评论仓库</p>
<p>在 github 中建一个项目，专门用来存储你的博客评论</p>
<p>2.3 配置 nexT 主题文件</p>
<p>编辑主题配置文件：<code>themes</code>\ <code>next主题</code> \ <code>_config.yml</code>，找到有关 gitment 的设置，如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">gitment:   </span><br><span class="line">  enable:  <span class="literal">true</span></span><br><span class="line">  mint: <span class="literal">true</span>  </span><br><span class="line">  count: <span class="literal">true</span> </span><br><span class="line">  lazy: <span class="literal">false</span>  						#评论懒加载，如果<span class="literal">true</span>，则默认不展示评论，点击按钮查看评论</span><br><span class="line">  cleanly: <span class="literal">false</span>  	</span><br><span class="line">  language: 		</span><br><span class="line">  github_user: 						#github名称</span><br><span class="line">  github_repo: BlogComments			#上一步新建存放评论的仓库名</span><br><span class="line">  client_id: b8bad0exxxx			#上面注册 OAuth Application 的 Client ID</span><br><span class="line">  client_secret: bcee560xxxxxx		#上面注册 OAuth Application 申请的 Client Secret</span><br><span class="line">  proxy_gateway: </span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint</span><br><span class="line"><span class="number">12345678910111213</span></span><br></pre></td></tr></table></figure>

<p>2.4 初始化</p>
<p>在设置完成后，<a href="https://so.csdn.net/so/search?q=Hexo&spm=1001.2101.3001.7020">Hexo</a>重新部署。每篇文章都要点击初始化评论按钮。</p>
<p>2.5 管理</p>
<p>评论显示在新建存放评论的仓库中的 issue 中。</p>
<p>2.6 关闭</p>
<p>可以单独关闭某个页面的评论，在页面的 Front-<a href="https://so.csdn.net/so/search?q=matter&spm=1001.2101.3001.7020">matter</a> 中添加 <strong>comments</strong> 字段，设为 <strong>false</strong>。比如标签页不想要评论，则在标签页面中做如下设置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: xxxxxxxxx</span><br><span class="line">date: <span class="number">2022</span>-<span class="number">03</span>-<span class="number">06</span> <span class="number">17</span>:<span class="number">05</span>:<span class="number">24</span></span><br><span class="line">type: <span class="string">&quot;tags&quot;</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>blog</category>
        <category>操作</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>小白</tag>
        <tag>操作流水线</tag>
      </tags>
  </entry>
  <entry>
    <title>unable to access &#39;https://***.github.io.git/&#39;:Failed to connect to github.com port</title>
    <url>/posts/7ea9f20/</url>
    <content><![CDATA[<p>hexo d 提交代码到github时报错</p>
<p><img src="/posts/7ea9f20/image-20230415235817860.png" alt="image-20230415235817860"></p>
<p>可执行如下代码取消git的https代理</p>
<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//取消http代理</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">//取消https代理 </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
        <category>问题</category>
        <category>已解决</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建自己的博客</title>
    <url>/posts/99c36cb/</url>
    <content><![CDATA[<p>​		简单的记录一下本博客创建的流程，中间有很多问题，全靠网络大佬，希望后面通过这个博客养成一个遇到问题即记录的习惯，这样对我对网络里的大伙们也是一个记录。</p>
<h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><p>Windows10 64-bit </p>
<p>nodejs 18.16.0 </p>
<p>Git 2.39.2</p>
<span id="more"></span>



<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><blockquote>
<p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p>
</blockquote>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>地址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p>根据自己的操作系统选择版本下载，如果没有特殊需求一路next即可</p>
<p><img src="/posts/99c36cb/image-20230416193648978.png" alt="image-20230416193648978"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="设置用户名和email地址"><a href="#设置用户名和email地址" class="headerlink" title="设置用户名和email地址"></a>设置用户名和email地址</h3><ol>
<li>桌面空白地右击鼠标，打开<code>Git Bash</code></li>
</ol>
<p><img src="/posts/99c36cb/image-20230416193700176.png" alt="image-20230416193700176"></p>
<ol start="2">
<li>设置用户名和email地址</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name renrenzzz</span><br><span class="line">git config --global user.email maorenren1@gmail.com</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416193818588.png" alt="image-20230416193818588"></p>
<p><img src="/posts/99c36cb/image-20230416193824066.png" alt="image-20230416193824066"></p>
<ol start="3">
<li>查看配置信息</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --list </span><br></pre></td></tr></table></figure>

<p>这个配置保存在<code>C:\Users\89683</code>目录下</p>
<p><img src="/posts/99c36cb/image-20230416200225450.png" alt="image-20230416200225450"></p>
<h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h1><blockquote>
<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I&#x2F;O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>
</blockquote>
<h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
<p>根据自己的操作系统选择LTS(长期支持版本），下载后如果没有特殊需求，一路next即可。</p>
<p><img src="/posts/99c36cb/image-20230416200507731.png" alt="image-20230416200507731"></p>
<p>验证：cmd窗口键入如下命令，显示版本则表示安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ol>
<li><p>nodejs安装目录下新建【node<em>global】和【node</em>cache】两个文件夹</p>
</li>
<li><p>创建完成后，管理员身份打开cmd窗口键入如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;D:\devTools\nodejs\node_global&quot;</span><br><span class="line"></span><br><span class="line">npm config set cache &quot;D:\devTools\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>​	3. 环境变量</p>
<p>​		在刚刚创建的【node<em>global】创建【node</em>modules】文件夹，并新建一个系统变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">变量名：NODE_PATH</span><br><span class="line"></span><br><span class="line">变量值：D:\devTools\nodejs\node*global\node*modules</span><br></pre></td></tr></table></figure>

<p>​		在【系统变量】中选择【Path】点击【编辑】添加<code>%NODE_PATH%</code></p>
<p>​		<img src="/posts/99c36cb/image-20230416201121214.png" alt="image-20230416201121214"></p>
<p>​		在【用户变量】中选择【Path】点击【编辑】修改AppData\Roaming\npm 修改成 D:\devTools\nodejs\node_global</p>
<p>​		<img src="/posts/99c36cb/image-20230416201156666.png" alt="image-20230416201156666"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>全局安装一个最将用的express模块测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install express -g   // -g 代表全局安装 （管理员身份打开CMD运行）</span><br></pre></td></tr></table></figure>

<h2 id="更换淘宝镜像"><a href="#更换淘宝镜像" class="headerlink" title="更换淘宝镜像"></a>更换淘宝镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>查询是否成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416203009526.png" alt="image-20230416203009526"></p>
<h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h2><blockquote>
<p>npm是node官方的包管理器。cnpm是个中国版的npm，是淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416203103526.png" alt="image-20230416203103526"></p>
<h1 id="创建个人仓库"><a href="#创建个人仓库" class="headerlink" title="创建个人仓库"></a>创建个人仓库</h1><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>创建仓库名为<code>Github名称.github.io</code> 的仓库。</p>
<h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><p>创建仓库名为<code>Gitee名称</code> 的仓库。Gitee后续部署page网站需要实名认证，比较烦，但国内Gitee速度快点，看个人网络情况。</p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>官网文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><ol>
<li><p>新建一个文件夹<code>blog</code>，用来存放博客</p>
</li>
<li><p>在新建的文件夹中，启动cmd窗口执行<code>hexo init</code>初始化，执行后文件夹目录如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地启动博客查看</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s # 启动</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416204108008.png" alt="image-20230416204108008"></p>
<p>可以登录<a href="http://localhost:4000/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2">http://localhost:4000/查看博客</a></p>
<ol start="4">
<li><p>推送项目到GitHub</p>
<p>安装hexo-deployer-git插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>配置Hexo的配置文件【_config.yml】</p>
<p>在_config.yml最后添加如下配置，这里使用https协议push项目时需要校验GitHub的用户名和密码，仅第一次需要。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>推送hexo项目到GitHub</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
<li><p>推送成功后即可登录</p>
</li>
</ol>
<p>​	Github: 直接登录<code>Github名称.github.io </code>访问博客</p>
<p>​	Gitee: 	服务 - Gitee Pages - 更新 ， 再访问<code> http://Gitee名称.gitee.io</code>访问博客</p>
]]></content>
      <categories>
        <category>blog</category>
        <category>操作</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>小白</tag>
        <tag>操作流水线</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo图片不展示问题</title>
    <url>/posts/d45490fe/</url>
    <content><![CDATA[<p>本地使用的是Typora编写的markdown文件，图片规则使用的相对路径</p>
<p><img src="/posts/d45490fe/image-20230416211900024.png" alt="image-20230416211900024"></p>
<p>​	</p>
<span id="more"></span>

<ol>
<li><p>确认hexo的_config配置文件中的<code>post_asset_folder</code>是否设置为<code>true</code></p>
</li>
<li><p>使用插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这边有个坑，如果是使用的是这个版本的</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm install hexo-asset-image -- save</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">则还是不会显示出来图片，因为这个版本的生成的图片路径会是一个错误的路径，如果非要用这个版本那么可以考虑修改一下这个插件的index.js文件,见备注；</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">还有就是 CodeFalling 总是会失败，如下图，我这边是多执行了几遍有一遍成功了。</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo s 运行查看</span><br></pre></td></tr></table></figure>

<p>失败:</p>
<p><img src="/posts/d45490fe/image-20230416233527481.png" alt="image-20230416233527481"></p>
<p>成功：</p>
<p><img src="/posts/d45490fe/image-20230416234013396.png" alt="image-20230416234013396"></p>
<p>备注：</p>
<blockquote>
<p>使用 Hexo-asset-image 插件静态图片路径会变成一个错误的路径.<br>我们可以看到错误的 URL 中, 在 host:port 后, 明显多了一个 .cn 的资源目录, 这在使用域名部署的时候, 明显是不正确的<br>错误: <a href="http://blog.diswares.cn/.cn/java-multithreading-thread-pool/juc-thread-pools.png">http://blog.diswares.cn/.cn/java-multithreading-thread-pool/juc-thread-pools.png</a><br>正确: <a href="http://blog.diswares.cn/java-multithreading-thread-pool/juc-thread-pools.png">http://blog.diswares.cn/java-multithreading-thread-pool/juc-thread-pools.png</a></p>
<p>解决方案</p>
<ol>
<li><p>cd node_modules&#x2F;hexo-asset-image&#x2F;</p>
</li>
<li><p>vim index.js</p>
</li>
<li><p>在 59 行附近, 将以下代码替换掉</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// $(this).attr(&#x27;src&#x27;, config.root + link + src);</span></span><br><span class="line"><span class="comment">// console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, data.<span class="property">permalink</span> +src);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span> + data.<span class="property">permalink</span> + src);</span><br></pre></td></tr></table></figure></li>
</ol>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>问题</category>
        <category>已解决</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>问题</tag>
      </tags>
  </entry>
</search>
