<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建自己的博客</title>
    <url>/posts/99c36cb/</url>
    <content><![CDATA[<p>​		简单的记录一下本博客创建的流程，中间有很多问题，全靠网络大佬，希望后面通过这个博客养成一个遇到问题即记录的习惯，这样对我对网络里的大伙们也是一个记录。</p>
<h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><p>Windows10 64-bit </p>
<p>nodejs 18.16.0 </p>
<p>Git 2.39.2</p>
<span id="more"></span>



<h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><blockquote>
<p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。</p>
</blockquote>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>地址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<p>根据自己的操作系统选择版本下载，如果没有特殊需求一路next即可</p>
<p><img src="/posts/99c36cb/image-20230416193648978.png" alt="image-20230416193648978"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="设置用户名和email地址"><a href="#设置用户名和email地址" class="headerlink" title="设置用户名和email地址"></a>设置用户名和email地址</h3><ol>
<li>桌面空白地右击鼠标，打开<code>Git Bash</code></li>
</ol>
<p><img src="/posts/99c36cb/image-20230416193700176.png" alt="image-20230416193700176"></p>
<ol start="2">
<li>设置用户名和email地址</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name renrenzzz</span><br><span class="line">git config --global user.email maorenren1@gmail.com</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416193818588.png" alt="image-20230416193818588"></p>
<p><img src="/posts/99c36cb/image-20230416193824066.png" alt="image-20230416193824066"></p>
<ol start="3">
<li>查看配置信息</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --list </span><br></pre></td></tr></table></figure>

<p>这个配置保存在<code>C:\Users\89683</code>目录下</p>
<p><img src="/posts/99c36cb/image-20230416200225450.png" alt="image-20230416200225450"></p>
<h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h1><blockquote>
<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I&#x2F;O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>
</blockquote>
<h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></p>
<p>根据自己的操作系统选择LTS(长期支持版本），下载后如果没有特殊需求，一路next即可。</p>
<p><img src="/posts/99c36cb/image-20230416200507731.png" alt="image-20230416200507731"></p>
<p>验证：cmd窗口键入如下命令，显示版本则表示安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ol>
<li><p>nodejs安装目录下新建【node<em>global】和【node</em>cache】两个文件夹</p>
</li>
<li><p>创建完成后，管理员身份打开cmd窗口键入如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;D:\devTools\nodejs\node_global&quot;</span><br><span class="line"></span><br><span class="line">npm config set cache &quot;D:\devTools\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure></li>
</ol>
<p>​	3. 环境变量</p>
<p>​		在刚刚创建的【node<em>global】创建【node</em>modules】文件夹，并新建一个系统变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">变量名：NODE_PATH</span><br><span class="line"></span><br><span class="line">变量值：D:\devTools\nodejs\node*global\node*modules</span><br></pre></td></tr></table></figure>

<p>​		在【系统变量】中选择【Path】点击【编辑】添加<code>%NODE_PATH%</code></p>
<p>​		<img src="/posts/99c36cb/image-20230416201121214.png" alt="image-20230416201121214"></p>
<p>​		在【用户变量】中选择【Path】点击【编辑】修改AppData\Roaming\npm 修改成 D:\devTools\nodejs\node_global</p>
<p>​		<img src="/posts/99c36cb/image-20230416201156666.png" alt="image-20230416201156666"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>全局安装一个最将用的express模块测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install express -g   // -g 代表全局安装 （管理员身份打开CMD运行）</span><br></pre></td></tr></table></figure>

<h2 id="更换淘宝镜像"><a href="#更换淘宝镜像" class="headerlink" title="更换淘宝镜像"></a>更换淘宝镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>查询是否成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416203009526.png" alt="image-20230416203009526"></p>
<h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h2><blockquote>
<p>npm是node官方的包管理器。cnpm是个中国版的npm，是淘宝定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416203103526.png" alt="image-20230416203103526"></p>
<h1 id="创建个人仓库"><a href="#创建个人仓库" class="headerlink" title="创建个人仓库"></a>创建个人仓库</h1><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>创建仓库名为<code>Github名称.github.io</code> 的仓库。</p>
<h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><p>创建仓库名为<code>Gitee名称</code> 的仓库。Gitee后续部署page网站需要实名认证，比较烦，但国内Gitee速度快点，看个人网络情况。</p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>官网文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><ol>
<li><p>新建一个文件夹<code>blog</code>，用来存放博客</p>
</li>
<li><p>在新建的文件夹中，启动cmd窗口执行<code>hexo init</code>初始化，执行后文件夹目录如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
</li>
<li><p>本地启动博客查看</p>
</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s # 启动</span><br></pre></td></tr></table></figure>

<p><img src="/posts/99c36cb/image-20230416204108008.png" alt="image-20230416204108008"></p>
<p>可以登录<a href="http://localhost:4000/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2">http://localhost:4000/查看博客</a></p>
<ol start="4">
<li><p>推送项目到GitHub</p>
<p>安装hexo-deployer-git插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>配置Hexo的配置文件【_config.yml】</p>
<p>在_config.yml最后添加如下配置，这里使用https协议push项目时需要校验GitHub的用户名和密码，仅第一次需要。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>推送hexo项目到GitHub</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</li>
<li><p>推送成功后即可登录</p>
</li>
</ol>
<p>​	Github: 直接登录<code>Github名称.github.io </code>访问博客</p>
<p>​	Gitee: 	服务 - Gitee Pages - 更新 ， 再访问<code> http://Gitee名称.gitee.io</code>访问博客</p>
]]></content>
      <categories>
        <category>blog</category>
        <category>操作</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>小白</tag>
        <tag>Hexo</tag>
        <tag>操作流水线</tag>
      </tags>
  </entry>
</search>
